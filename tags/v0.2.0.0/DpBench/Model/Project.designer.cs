// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>LensCompare</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace LensCompare
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.Generic;

    /*
    public partial class Project : System.ComponentModel.INotifyPropertyChanged
    {

        private List<ProjectPhoto> photoField;

        private List<ProjectDetail> detailField;

        public Project()
        {
            this.detailField = new List<ProjectDetail>();
            this.photoField = new List<ProjectPhoto>();
        }

        public List<ProjectPhoto> Photo
        {
            get
            {
                return this.photoField;
            }
            set
            {
                if ((this.photoField != null))
                {
                    if ((photoField.Equals(value) != true))
                    {
                        this.photoField = value;
                        this.OnPropertyChanged("Photo");
                    }
                }
                else
                {
                    this.photoField = value;
                    this.OnPropertyChanged("Photo");
                }
            }
        }

        public List<ProjectDetail> DetailArea
        {
            get
            {
                return this.detailField;
            }
            set
            {
                if ((this.detailField != null))
                {
                    if ((detailField.Equals(value) != true))
                    {
                        this.detailField = value;
                        this.OnPropertyChanged("DetailArea");
                    }
                }
                else
                {
                    this.detailField = value;
                    this.OnPropertyChanged("DetailArea");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class ProjectPhoto : System.ComponentModel.INotifyPropertyChanged
    {

        private string filenameField;

        public string Filename
        {
            get
            {
                return this.filenameField;
            }
            set
            {
                if ((this.filenameField != null))
                {
                    if ((filenameField.Equals(value) != true))
                    {
                        this.filenameField = value;
                        this.OnPropertyChanged("Filename");
                    }
                }
                else
                {
                    this.filenameField = value;
                    this.OnPropertyChanged("Filename");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class ProjectDetail : System.ComponentModel.INotifyPropertyChanged
    {

        private ProjectDetailRectangle rectangleField;

        private string nameField;

        public ProjectDetail()
        {
            this.rectangleField = new ProjectDetailRectangle();
        }

        public ProjectDetailRectangle Rectangle
        {
            get
            {
                return this.rectangleField;
            }
            set
            {
                if ((this.rectangleField != null))
                {
                    if ((rectangleField.Equals(value) != true))
                    {
                        this.rectangleField = value;
                        this.OnPropertyChanged("Rectangle");
                    }
                }
                else
                {
                    this.rectangleField = value;
                    this.OnPropertyChanged("Rectangle");
                }
            }
        }

        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("name");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class ProjectDetailRectangle : System.ComponentModel.INotifyPropertyChanged
    {

        private int xField;

        private bool xFieldSpecified;

        private int yField;

        private bool yFieldSpecified;

        private int widthField;

        private bool widthFieldSpecified;

        private int heightField;

        private bool heightFieldSpecified;

        public int X
        {
            get
            {
                return this.xField;
            }
            set
            {
                if ((xField.Equals(value) != true))
                {
                    this.xField = value;
                    this.OnPropertyChanged("X");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XSpecified
        {
            get
            {
                return this.xFieldSpecified;
            }
            set
            {
                if ((xFieldSpecified.Equals(value) != true))
                {
                    this.xFieldSpecified = value;
                    this.OnPropertyChanged("XSpecified");
                }
            }
        }

        public int Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                if ((yField.Equals(value) != true))
                {
                    this.yField = value;
                    this.OnPropertyChanged("Y");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YSpecified
        {
            get
            {
                return this.yFieldSpecified;
            }
            set
            {
                if ((yFieldSpecified.Equals(value) != true))
                {
                    this.yFieldSpecified = value;
                    this.OnPropertyChanged("YSpecified");
                }
            }
        }

        public int Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                if ((widthField.Equals(value) != true))
                {
                    this.widthField = value;
                    this.OnPropertyChanged("Width");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return this.widthFieldSpecified;
            }
            set
            {
                if ((widthFieldSpecified.Equals(value) != true))
                {
                    this.widthFieldSpecified = value;
                    this.OnPropertyChanged("WidthSpecified");
                }
            }
        }

        public int Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                if ((heightField.Equals(value) != true))
                {
                    this.heightField = value;
                    this.OnPropertyChanged("Height");
                }
            }
        }

        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return this.heightFieldSpecified;
            }
            set
            {
                if ((heightFieldSpecified.Equals(value) != true))
                {
                    this.heightFieldSpecified = value;
                    this.OnPropertyChanged("HeightSpecified");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }*/
}
